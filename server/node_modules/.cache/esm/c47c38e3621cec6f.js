let Invoice;_621‍.x([["getInvoices",()=>getInvoices],["addInvoices",()=>addInvoices],["getInvoiceById",()=>getInvoiceById],["editInvoice",()=>editInvoice],["deleteInvoice",()=>deleteInvoice]]);_621‍.w("../models/invoice-model.js",[["default",["Invoice"],function(v){Invoice=v}]]);




       const  getInvoices = async(request,response) =>{
    
    try{
        let  invoice =  await Invoice.find();
        response.status(200).json(invoice);
    }catch( error ){
        response.status(404).json({ message: error.message })
    }
    
}

       const  addInvoices = async (request,response) =>{
    const invoice = request.body;
    // invoice.postedBy=request.user._id;
    const newInvoice= new Invoice (invoice);
    // console.log(request.user._id);

    try{
         await newInvoice.save();
        response.status(201).json(newInvoice);
    } catch (error){
        response.status(409).json({ message: error.message});     
    }

}

       const getInvoiceById = async (request, response) => {
    try{
        const invoice = await Invoice.findById(request.params.id);
        response.status(200).json(invoice);
    }catch( error ){
        response.status(404).json({ message: error.message })
    }
}

       const editInvoice = async (request, response) => {
    let invoice = await Invoice.findById(request.params.id);
    invoice = request.body;

    const editInvoice = new Invoice(invoice);
    try{
        await Invoice.updateOne({_id: request.params.id}, editInvoice);
        response.status(201).json(editInvoice);
    } catch (error){
        response.status(409).json({ message: error.message});     
    }
}

       const deleteInvoice = async (request, response) => {
    try{
        await Invoice.deleteOne({_id: request.params.id});
        response.status(201).json("Invoice deleted Successfully");
    } catch (error){
        response.status(409).json({ message: error.message});     
    }
}

